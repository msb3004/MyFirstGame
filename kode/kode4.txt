let index = 0;

class Particle{
  
  constructor(x, y, m){
    this.pos = createVector(x, y);
    
    this.up = createVector(0, -2);

    this.vel = createVector(0, 0);
    this.acc = createVector(0, 0);
    //this.vel.mult(random(3));
    this.mass = m;
    this.r = sqrt(this.mass) * 10;
    
    this.acc.setMag(1);
    
    
  }
  
  applyForce(force){
    //console.log(force,this.mass);
    //let f = p5.Vector.div(force, this.mass);
    //console.log(f);
    this.acc.add(force);
  }

applyGravity(){

  
  update(){
    
  /*  let mouse = createVector(mouseX, mouseY);
    this.acc = p5.Vector.sub(mouse, this.pos);
   this.acc.setMag(1);
*/
    
    
    this.vel.add(this.acc);
  //  this.vel.limit(5);
    this.pos.add(this.vel);
    //this.acc.setMag(0);
    

    
  }
  
  friction(){
    let diff = height - (this.pos.y + this.r);
    
   /* if(diff < 1){
      let force = this.vel.copy();
      force.normalize();
      force.mult(-1);
      
      let mu = 0.1;
      let normal = this.mass;
      force.setMag(mu * normal);
      this.applyForce(force);
      
    }*/
  }
  
  show(){
    stroke(255,100);
    strokeWeight(2);
    fill(255, 100);
    ellipse(this.pos.x, this.pos.y, this.r *2);
    
  }
  
  

  edges(){
    if (this.pos.y >= height-this.r){
      this.pos.y = height-this.r;
      this.vel.y *= -1;
    }
    else if(this.pos.y <= this.r){
      this.pos.y = this.r;
      this.vel.y *= -1;
    }

    if (this.pos.x >= width-this.r){
      this.pos.x = width-this.r;
      this.vel.x *= -1;
    }
    else if(this.pos.x <= this.r){
      this.pos.x = this.r;
      this.vel.x *= -1;
    }
 
  }
  
}