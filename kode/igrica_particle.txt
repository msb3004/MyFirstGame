let stamina_slow = false;

let stamina = 780;
let health = 780;



class Particle{
  
  constructor(x, y, m){
    this.pos = createVector(x, y);
    this.vel = createVector(0, 1);
    this.acc = createVector(0, 0);
    
    this.mass = m;
    this.r = sqrt(this.mass) * 10 ;

  }
  
  movement(){
    
  if (keyIsDown(UP_ARROW)) {
      this.pos.add(0, -1);
  }

  if (keyIsDown(DOWN_ARROW)) {
      this.pos.add(0, 1);
  }

  if (keyIsDown(LEFT_ARROW)) {
      this.pos.add(-1, 0);
  }

  if (keyIsDown(RIGHT_ARROW)) {
      this.pos.add(1, 0);
  }
  
    ///////////////////////////////////////
    
  if (keyIsDown(UP_ARROW) && keyIsDown(SHIFT) && stamina > 0 && stamina_slow == false) {
      this.pos.add(0, -5);
      
      
  }

  if (keyIsDown(DOWN_ARROW) && keyIsDown(SHIFT) && stamina > 0 && stamina_slow == false) {
      this.pos.add(0, 5);
    
  }

  if (keyIsDown(LEFT_ARROW) && keyIsDown(SHIFT) && stamina > 0 && stamina_slow == false) {
      this.pos.add(-5, 0);
    
  }

  if (keyIsDown(RIGHT_ARROW) && keyIsDown(SHIFT) && stamina > 0 && stamina_slow == false) {
      this.pos.add(5, 0);
    
  }
  
    //////////////////////////////////////////
    
  if(keyIsDown(UP_ARROW) && keyIsDown(SHIFT) && stamina > 0 && stamina_slow == false ||
     keyIsDown(DOWN_ARROW) && keyIsDown(SHIFT) && stamina > 0 && stamina_slow == false ||
     keyIsDown(LEFT_ARROW) && keyIsDown(SHIFT) && stamina > 0 && stamina_slow == false ||
     keyIsDown(RIGHT_ARROW) && keyIsDown(SHIFT) && stamina > 0 && stamina_slow == false){
      
     stamina = stamina - 5;
      
     }
    
  if(stamina < 781 && stamina_slow == false){
    stamina += 1;
  }
    
  if(stamina <= 0){
    stamina_slow = true;
  }
  
  if(stamina_slow == true && stamina < 50){
    stamina += 0.25;
  }
  else if(stamina_slow == true && stamina >= 50){
    stamina_slow = false;
  }
  
    
    //////////////////////////////////////////
    
  if(keyIsDown(82)){
      this.pos.set(400, 400);
      stamina = 780;
    }
  
  }
  
  
  
  apply(force){
    this.acc = force;
    this.vel.add(acc);
    
  }
  
  
  
  update(){
    this.vel.add(this.acc);
    this.pos.add(this.vel);
  }
  
  show(){
    stroke(255,100);
    strokeWeight(2);
    fill(255, 100);
    ellipse(this.pos.x, this.pos.y, this.r *2);  
    }
    
  stamina(){
    stroke(255, 100, 0);
    strokeWeight(2);
    fill(0, 0, 255);
    rect(10, 40, stamina, 20);
    
  }
  
  health(){
    stroke(255, 100, 0);
    strokeWeight(2);
    fill(0, 255, 0);
    rect(10, 10, health, 20);
    
    
  }
  
  }
class Vehicle {
  constructor(x, y) {
    this.pos = createVector(x, y);
    this.vel = createVector(0, 0);
    this.acc = createVector(0, 0);
    this.maxSpeed = 2;
    this.maxForce = 0.25;
    this.r = 16;
    
    
  }
  
  

  seek(target) {
    let force = p5.Vector.sub(target, this.pos);
    force.setMag(this.maxSpeed);
    force.sub(this.vel);
    force.limit(this.maxForce);
    this.applyForce(force);
    
    if( keyIsDown(82)){
      this.pos.set(200, 200);
    }
  }

  applyForce(force) {
    this.acc.add(force);
  }

  update() {
    this.vel.add(this.acc);
    this.vel.limit(this.maxSpeed);
    this.pos.add(this.vel);
    this.acc.set(0, 0);
  }

  show() {
    stroke(255);
    strokeWeight(2);
    fill(255);
    push();
    translate(this.pos.x, this.pos.y);
    rotate(this.vel.heading());
    triangle(-this.r, -this.r / 2, -this.r, this.r / 2, this.r, 0);
    pop();
  }
}